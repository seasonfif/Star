apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.seasonfif.star"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }

    //greendao配置
    greendao {
        //版本号，升级时可配置
        schemaVersion 2
        //由GreenDao自动生成代码所在的包名，默认的是在项目包下面新建一个gen
        daoPackage 'com.seasonfif.star.database.gen'
        //设置自动生成代码的目录
        targetGenDir 'src/main/java'
    }

    lintOptions {
        checkReleaseBuilds false
    }

    //签名设置
    signingConfigs {
        debug {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }

    buildTypes {
        debug {
            //debug开发环境
            buildConfigField "boolean", "isDebug", "true"
            debuggable true
        }

        release {
            buildConfigField "boolean", "isDebug", "false"
            debuggable false
            minifyEnabled true//是否启动混淆
            shrinkResources true //是否移除无用资源文件，shrinkResources依赖于minifyEnabled，必须和minifyEnabled一起用
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "type"
    //渠道打包信息
    productFlavors {
        baidu {
            dimension "type"
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        tencent {
            dimension "type"
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "tencent"]
        }
        u360 {
            dimension "type"
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "u360"]
        }
        xiaomi {
            dimension "type"
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
    }

    applicationVariants.all { variant ->

        //这个修改输出的APK路径
        variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/apk")
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
            //这个修改输出APK的文件名
            apkData.outputFileName = "ohmystar_" +
                    variant.flavorName + "_" +
                    variant.buildType.name + "_" +
                    variant.versionName + "_" +
                    releaseTime()+
                    ".apk"
        }
    }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation 'com.android.support:appcompat-v7:26.1.0'
  implementation 'com.android.support:design:26.1.0'
  implementation 'com.android.support:support-v4:26.1.0'
  implementation 'com.android.support:recyclerview-v7:26.1.0'
  implementation 'com.android.support:cardview-v7:26.1.0'
  debugCompile 'com.amitshekhar.android:debug-db:1.0.2'
  compile 'com.google.code.gson:gson:2.7'
  compile 'net.danlew:android.joda:2.9.4.1'
  annotationProcessor 'com.jakewharton:butterknife-compiler:8.2.1'
  compile 'com.jakewharton:butterknife:8.2.1'
  compile 'io.reactivex:rxjava:1.1.9'
  compile 'io.reactivex:rxandroid:1.2.1'
  compile 'com.squareup.retrofit2:retrofit:2.1.0'
  compile 'com.squareup.retrofit2:converter-gson:2.1.0'
  compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
  compile 'org.greenrobot:greendao:3.2.0'
  compile 'com.squareup.picasso:picasso:2.5.2'

  compile('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
      transitive = true;
  }
  compile 'com.umeng.analytics:analytics:latest.integration'

  compile project(path: ':recyclerview-swipe')
  implementation project(':library-adapter')
  implementation project(':library-progressbutton')
}

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}